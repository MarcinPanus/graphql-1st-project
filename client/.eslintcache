[{"/Users/marcinpanus/Desktop/github/graphql/client/src/index.js":"1","/Users/marcinpanus/Desktop/github/graphql/client/src/App.js":"2","/Users/marcinpanus/Desktop/github/graphql/client/src/reportWebVitals.js":"3","/Users/marcinpanus/Desktop/github/graphql/client/src/GraphQL/Mutations.js":"4","/Users/marcinpanus/Desktop/github/graphql/client/src/GraphQL/Queries.js":"5","/Users/marcinpanus/Desktop/github/graphql/client/src/Components/ListOfUsers.js":"6","/Users/marcinpanus/Desktop/github/graphql/client/src/Components/CreateUserForm.js":"7","/Users/marcinpanus/Desktop/github/graphql/client/src/Components/ItemOfTheList.js":"8"},{"size":313,"mtime":1694179224256,"results":"9","hashOfConfig":"10"},{"size":885,"mtime":1694180965786,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1694118363409,"results":"12","hashOfConfig":"10"},{"size":847,"mtime":1694178219392,"results":"13","hashOfConfig":"10"},{"size":178,"mtime":1694179483069,"results":"14","hashOfConfig":"10"},{"size":951,"mtime":1694527321103,"results":"15","hashOfConfig":"10"},{"size":1844,"mtime":1694513774173,"results":"16","hashOfConfig":"10"},{"size":849,"mtime":1694527509984,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1qhd1xm",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/marcinpanus/Desktop/github/graphql/client/src/index.js",[],["37","38"],"/Users/marcinpanus/Desktop/github/graphql/client/src/App.js",["39"],"import \"./App.css\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  HttpLink,\n  from,\n} from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport CreateUserForm from \"./Components/CreateUserForm\";\nimport ListOfUsers from \"./Components/ListOfUsers\";\n\nconst errorLink = onError(({ graphqlErrors, networkError }) => {\n  if (graphqlErrors) {\n    graphqlErrors.map(({ message, location, path }) => {\n      alert(`Graphql error: ${message}`);\n    });\n  }\n});\n\nconst link = from([\n  errorLink,\n  new HttpLink({ uri: \"http://localhost:6969/graphql\" }),\n]);\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: link,\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"px-5 py-3\">\n        <CreateUserForm />\n        <ListOfUsers />\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","/Users/marcinpanus/Desktop/github/graphql/client/src/reportWebVitals.js",[],"/Users/marcinpanus/Desktop/github/graphql/client/src/GraphQL/Mutations.js",[],"/Users/marcinpanus/Desktop/github/graphql/client/src/GraphQL/Queries.js",[],"/Users/marcinpanus/Desktop/github/graphql/client/src/Components/ListOfUsers.js",["40","41"],"import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { LOAD_USERS } from \"../GraphQL/Queries\";\nimport ItemOfTheList from \"./ItemOfTheList\";\n\nfunction GetUsers() {\n  const { error, loading, data } = useQuery(LOAD_USERS);\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    if (data) {\n      setUsers(data.getAllUsers);\n    }\n  }, [data]);\n\n  return (\n    <table className=\"table table-striped border my-3\">\n      <thead>\n        <tr>\n          <th scope=\"col\">ID</th>\n          <th scope=\"col\">first name</th>\n          <th scope=\"col\">last name</th>\n          <th scope=\"col\">e-mail</th>\n          <th scope=\"col\">password</th>\n          <th scope=\"col\">action</th>\n        </tr>\n      </thead>\n      <tbody>\n        {users.map((user) => {\n          return <ItemOfTheList {...{ user, setUsers }} key={user.id} />;\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nexport default GetUsers;\n","/Users/marcinpanus/Desktop/github/graphql/client/src/Components/CreateUserForm.js",[],"/Users/marcinpanus/Desktop/github/graphql/client/src/Components/ItemOfTheList.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":15,"column":53,"nodeType":"48","messageId":"49","endLine":15,"endColumn":55},{"ruleId":"50","severity":1,"message":"51","line":7,"column":11,"nodeType":"52","messageId":"53","endLine":7,"endColumn":16},{"ruleId":"50","severity":1,"message":"54","line":7,"column":18,"nodeType":"52","messageId":"53","endLine":7,"endColumn":25},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]